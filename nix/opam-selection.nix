### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    opam-commit = "feef05dfa6dd1dc66616abae311e41bc0830d59b";
    pkgs = self.pkgs;
    repo = (pkgs.fetchFromGitHub) 
    {
      owner = "ocaml";
      repo = "opam-repository";
      rev = opam-commit;
      sha256 = "0pal75rixcd77vf8366852n6m2mw3azpqahvslah7nfc58s8ml28";
    };
    repoPath = self.repoPath;
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.08.1";
  opam-commit = opam-commit;
  selection = 
  {
    base-bigarray = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1hgfwxh4vdv21m2a4g506y27pcv912v67qi4svrn53rgc43ckv6b";
        package = "packages/base-bigarray/base-bigarray.base";
      };
      pname = "base-bigarray";
      src = null;
      version = "base";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    camlp4 = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1fc9rfgbndhy1dn7c8kjmsvanxxfqfaa0imd3pdny0x64q87d2m5";
        package = "packages/camlp4/camlp4.4.08+1";
      };
      pname = "camlp4";
      src = pkgs.fetchurl 
      {
        sha256 = "124xpl9bl0ggj498in5gypp9zdifvm3ln3znfxc47y7vrayx6p35";
        url = "https://github.com/ocaml/camlp4/archive/4.08+1.tar.gz";
      };
      version = "4.08+1";
    };
    conf-gmp = 
    {
      buildInputs = [ (pkgs.gmp or null) (pkgs.gmp-dev or null)
                       (pkgs.gmp-devel or null) (pkgs.libgmp-dev or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a8ph62kvn3b7q6phczgs6gacw2gya6xiiw6wc6fms3qyn0r5gbc";
        package = "packages/conf-gmp/conf-gmp.1";
      };
      pname = "conf-gmp";
      src = null;
      version = "1";
    };
    conf-gmp-powm-sec = 
    {
      opamInputs = {
                     conf-gmp = selection.conf-gmp;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1d93vlm56dxxv2kv8rkjz2p34iv2l5is0c4csn3jiv2k53ldcsma";
        package = "packages/conf-gmp-powm-sec/conf-gmp-powm-sec.1";
      };
      pname = "conf-gmp-powm-sec";
      src = null;
      version = "1";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-perl = 
    {
      buildInputs = [ (pkgs.perl) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:090hjg76q1q651vwh38k0jmmr8mp465m7bfgnw5aqxpv1kxb4f12";
        package = "packages/conf-perl/conf-perl.1";
      };
      pname = "conf-perl";
      src = null;
      version = "1";
    };
    conf-pkg-config = 
    {
      buildInputs = [ (pkgs."devel/pkgconf" or null)
                       (pkgs.pkg-config or null) (pkgs.pkgconf or null)
                       (pkgs.pkgconfig or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0xd5v4j1b7bc72j9vywdcgpjhi6jiq0bxfdx0h0nsmf6m4z9j0bf";
        package = "packages/conf-pkg-config/conf-pkg-config.1.1";
      };
      pname = "conf-pkg-config";
      src = null;
      version = "1.1";
    };
    conf-python-3 = 
    {
      buildInputs = [ (pkgs.python3) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wgv2ha39p4p19d9x0456jcl6c2v4y0v27g06v5sz6h9d6y80cgq";
        package = "packages/conf-python-3/conf-python-3.1.0.0";
      };
      pname = "conf-python-3";
      src = null;
      version = "1.0.0";
    };
    conf-zlib = 
    {
      buildInputs = [ (pkgs.zlib) ];
      opamInputs = 
      {
        conf-pkg-config = selection.conf-pkg-config;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1im686h0j3diny35zwrkj9mwdm2msagg1ladga2ll8ksgqi0z0qi";
        package = "packages/conf-zlib/conf-zlib.1";
      };
      pname = "conf-zlib";
      src = null;
      version = "1";
    };
    containers = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        gen = selection.gen or null;
        iter = selection.iter or null;
        mdx = selection.mdx or null;
        ocaml = selection.ocaml;
        odoc = selection.odoc or null;
        ounit = selection.ounit or null;
        qcheck = selection.qcheck or null;
        qtest = selection.qtest or null;
        result = selection.result;
        uchar = selection.uchar;
        uutf = selection.uutf or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15aa71c09scdzri6icyajd7n9kak89vpxwsf94j8j9bqlh1yrm0l";
        package = "packages/containers/containers.2.6.1";
      };
      pname = "containers";
      src = pkgs.fetchurl 
      {
        sha256 = "1yck8qqc4lz72k97qn7sjxpqp6xf1r1csyjiq2zsbpqlh6i4zz99";
        url = "https://github.com/c-cube/ocaml-containers/archive/2.6.1.tar.gz";
      };
      version = "2.6.1";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hdl429cpb4bg9gc07rxs14p7d3r3nfi3vw6s38c6xhf412nl611";
        package = "packages/cppo/cppo.1.6.6";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "185q0x54id7pfc6rkbjscav8sjkrg78fz65rgfw7b4bqlyb2j9z7";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.6/cppo-v1.6.6.tbz";
      };
      version = "1.6.6";
    };
    cryptokit = 
    {
      opamInputs = 
      {
        conf-gmp-powm-sec = selection.conf-gmp-powm-sec;
        conf-zlib = selection.conf-zlib;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        zarith = selection.zarith;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0vax98ri3l5k5z1ly6j0v3pzbgx6b1r18h0rx7ja95yza6af9q1c";
        package = "packages/cryptokit/cryptokit.1.13";
      };
      pname = "cryptokit";
      src = pkgs.fetchurl 
      {
        sha256 = "1f4jjnp2a911nqw0hbijyv9vygkk6kw5zx75qs49hfm3by6ij8rq";
        url = "https://github.com/xavierleroy/cryptokit/archive/release113.tar.gz";
      };
      version = "1.13";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ll4k4w9ahl9jizkbflwy37vhy2igr7ms0rqz5zv38xhhx8hd2fp";
        package = "packages/dune/dune.1.11.4";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "1rkc8lqw30ifjaz8d81la6i8j05ffd0whpxqsbg6dci16945zjvp";
        url = "https://github.com/ocaml/dune/releases/download/1.11.4/dune-build-info-1.11.4.tbz";
      };
      version = "1.11.4";
    };
    dune-configurator = 
    {
      opamInputs = {
                     dune = selection.dune;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lvfavc8dcgqw0xz82yq40fakm22y7x8abirk9hcb7m8l7hp2w95";
        package = "packages/dune-configurator/dune-configurator.1.0.0";
      };
      pname = "dune-configurator";
      src = null;
      version = "1.0.0";
    };
    extlib = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:080965icazd4m1np7ai9n6sdxcwfn64cn685x3vw3fi913harwps";
        package = "packages/extlib/extlib.1.7.6";
      };
      pname = "extlib";
      src = pkgs.fetchurl 
      {
        sha256 = "0wfs20v1yj5apdbj7214wdsr17ayh0qqq7ihidndvc8nmmwfa1dz";
        url = "https://ygrek.org.ua/p/release/ocaml-extlib/extlib-1.7.6.tar.gz";
      };
      version = "1.7.6";
    };
    extunix = 
    {
      opamInputs = 
      {
        base-bigarray = selection.base-bigarray;
        base-bytes = selection.base-bytes;
        base-unix = selection.base-unix;
        camlp4 = selection.camlp4;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wzixn8j25lpl9vj8r5i8nh0qnali6qg6190bzd7kw2lgiybaxw2";
        package = "packages/extunix/extunix.0.1.6";
      };
      pname = "extunix";
      src = pkgs.fetchurl 
      {
        sha256 = "0apmlk94jlvv5lgi3s9cpn5zhpckm0j3cm7pzwsbldypsfr86973";
        url = "http://ygrek.org.ua/p/release/ocaml-extunix/ocaml-extunix-0.1.6.tar.gz";
      };
      version = "0.1.6";
    };
    gup = 
    {
      buildInputs = [ (pkgs.zlib or null) ];
      opamInputs = 
      {
        conf-python-3 = selection.conf-python-3;
        containers = selection.containers;
        cryptokit = selection.cryptokit;
        dune = selection.dune;
        extlib = selection.extlib;
        extunix = selection.extunix;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        num = selection.num;
        ocamlfind = selection.ocamlfind;
        oseq = selection.oseq;
        ounit = selection.ounit or null;
        ppx_deriving_protobuf = selection.ppx_deriving_protobuf;
      };
      opamSrc = "gup.opam";
      pname = "gup";
      src = self.directSrc "gup";
      version = "development";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17czq0yc74arp7vpdarnr5gg3xab2jarh0d65qbp4dzyx7zw8ly9";
        package = "packages/lwt/lwt.4.4.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1g4bg6lxdxpayvdr51c1l8022gsj39nds0vw9aay4kkl6nlzv6vl";
        url = "https://github.com/ocsigen/lwt/archive/4.4.0.tar.gz";
      };
      version = "4.4.0";
    };
    lwt_ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17wr1r7q6mm7y968kifqkkrja8g0h1wzfsqj2ldysp1b1g540n05";
        package = "packages/lwt_ppx/lwt_ppx.1.2.4";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "1g4bg6lxdxpayvdr51c1l8022gsj39nds0vw9aay4kkl6nlzv6vl";
        url = "https://github.com/ocsigen/lwt/archive/4.4.0.tar.gz";
      };
      version = "1.2.4";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    num = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0dmp1vfg2212famm3fl7has2i8y9z5jj1f95v1yc2x686livkhz0";
        package = "packages/num/num.1.2";
      };
      pname = "num";
      src = pkgs.fetchurl 
      {
        sha256 = "1pjkahss0gg5i9v3wwx6inlsz2jd562lv7ah8sbsgx2zj82320n5";
        url = "https://github.com/ocaml/num/archive/v1.2.tar.gz";
      };
      version = "1.2";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1f2v07fzx7rg0lc8pzs1s24vp49y0jyfxf98b9z57giik28dafgp";
        package = "packages/ocaml/ocaml.4.08.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.08.1";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1gh1552rac1r3zzw1b7z0776walapin07bk0bpg8j561b4kwcb46";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.08.1";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "11fvsm861lr73lk181gl5iczprp8d83fvgc1q6dx8gxqhzad6gmm";
        url = "https://github.com/ocaml/ocaml/archive/4.08.1.tar.gz";
      };
      version = "4.08.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlps6sn5m8lkrnjjp34i145viwwmhq684dn995a7xxf8b3h60d6";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.4.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "1f6kfysppsl2qy1pisgnn9kr0nabwk7xjddmcvi3wyqq0p1bs7r3";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.4.0/ocaml-migrate-parsetree-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nb8z88xhnbz324q14ydlbw8pnrsk5qr3lw34hv0i7bhd9hgk8y9";
        package = "packages/ocplib-endian/ocplib-endian.1.0";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0hwj09rnzjs0m0kazz5h2mgs6p95j0zlga8cda5srnzqmzhniwkn";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.0.tar.gz";
      };
      version = "1.0";
    };
    oseq = 
    {
      opamInputs = 
      {
        containers = selection.containers or null;
        dune = selection.dune;
        gen = selection.gen or null;
        odoc = selection.odoc or null;
        qcheck = selection.qcheck or null;
        qtest = selection.qtest or null;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0id237fi4wacy1nlws8iwvlyz2a7i2cqg71vgvgm8y2c8aaf85dz";
        package = "packages/oseq/oseq.0.3";
      };
      pname = "oseq";
      src = pkgs.fetchurl 
      {
        sha256 = "0fv1w993jr5s5zz7kdgmc3ba001vcf83nf8qhq7vargfzq99b658";
        url = "https://github.com/c-cube/oseq/archive/0.3.tar.gz";
      };
      version = "0.3";
    };
    ounit = 
    {
      opamInputs = 
      {
        ocamlfind = selection.ocamlfind;
        ounit2 = selection.ounit2;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:06gh1jvz45rq9qsqg9fb1pkas5xyms6bca8d0pmf2vyj7nj87xf7";
        package = "packages/ounit/ounit.2.2.1";
      };
      pname = "ounit";
      src = pkgs.fetchurl 
      {
        sha256 = "0fayi6laqrzxhvz7w32fkbhlqz914k6v2hqcdszakcnx7j61wy6v";
        url = "https://github.com/gildor478/ounit/releases/download/v2.2.1/ounit-v2.2.1.tbz";
      };
      version = "2.2.1";
    };
    ounit2 = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nwzc9p5k3hdyrzff63zxgv1fg3swla9j9y7rznyrgfqbby7izpx";
        package = "packages/ounit2/ounit2.2.2.1";
      };
      pname = "ounit2";
      src = pkgs.fetchurl 
      {
        sha256 = "0fayi6laqrzxhvz7w32fkbhlqz914k6v2hqcdszakcnx7j61wy6v";
        url = "https://github.com/gildor478/ounit/releases/download/v2.2.1/ounit-v2.2.1.tbz";
      };
      version = "2.2.1";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_deriving = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ounit = selection.ounit or null;
        ppx_derivers = selection.ppx_derivers;
        ppx_tools = selection.ppx_tools;
        ppxfind = selection.ppxfind;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0c50srrs1figgrsbzyjm36kqk6cp8nicmigxa9123zkxizzp3ics";
        package = "packages/ppx_deriving/ppx_deriving.4.4";
      };
      pname = "ppx_deriving";
      src = pkgs.fetchurl 
      {
        sha256 = "0d6cdgk6kdi64l4q4l6hs2zln5js76q0yn94yriz38b5rgs5mn62";
        url = "https://github.com/ocaml-ppx/ppx_deriving/archive/v4.4.tar.gz";
      };
      version = "4.4";
    };
    ppx_deriving_protobuf = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_deriving = selection.ppx_deriving;
        ppx_tools = selection.ppx_tools;
        ppxfind = selection.ppxfind;
        uint = selection.uint or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0fkfv5x741b9kf7vv7jslra2zvj8z3kr303d80ccahddz9ncn0nq";
        package = "packages/ppx_deriving_protobuf/ppx_deriving_protobuf.2.7";
      };
      pname = "ppx_deriving_protobuf";
      src = pkgs.fetchurl 
      {
        sha256 = "1z9yxmdsz9xpsv6j0hkabshhi94i1zky101igjncrd5x05343h0h";
        url = "https://github.com/ocaml-ppx/ppx_deriving_protobuf/archive/v2.7.tar.gz";
      };
      version = "2.7";
    };
    ppx_tools = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:09w55zr780cw72zx72x81j8fcvmqxvcba45y17rk3i7wvz3wf9py";
        package = "packages/ppx_tools/ppx_tools.5.3+4.08.0";
      };
      pname = "ppx_tools";
      src = pkgs.fetchurl 
      {
        sha256 = "0i9nh0rs1h6z4jnhahppbdm5d5q47w4xs6hhc8dy6sbjh7rf8fl4";
        url = "https://github.com/ocaml-ppx/ppx_tools/archive/5.3+4.08.0.tar.gz";
      };
      version = "5.3+4.08.0";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1rg0yfsacna7zadxin9s1qkaga940kvsffaxmdvn4y0f923xnpcn";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.2.3";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "11ac52fg8bbsgsqxinj1qxm7gp9j52d4fal3696yxsrb6hwcfcpi";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.2.3.tar.gz";
      };
      version = "5.2.3";
    };
    ppxfind = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0zicjnj2p2g8pyx9c9gdh01cfm9v1vi72kmb2m8qh7yx4wf9srn0";
        package = "packages/ppxfind/ppxfind.1.3";
      };
      pname = "ppxfind";
      src = pkgs.fetchurl 
      {
        sha256 = "1r4jp0516378js62ss50a9s8ql2pm8lfdd3mnk214hp7s0kb17fl";
        url = "https://github.com/diml/ppxfind/releases/download/1.3/ppxfind-1.3.tbz";
      };
      version = "1.3";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:159gmr00z6jmpxvk83vnv738ls4kbzfn8p5042i87m6p8damaxhc";
        package = "packages/result/result.1.4";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "1cjlncnzkwc6zr4v8dgy8nin490blbyxzwwp0qh0cla7s3q2jw0n";
        url = "https://github.com/janestreet/result/archive/1.4.tar.gz";
      };
      version = "1.4";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l6bfv426xb77qfiv880yy8dcscb2hi5703n9dj32fa3mlxnbg42";
        package = "packages/stdlib-shims/stdlib-shims.0.1.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1jv6yb47f66239m7hsz7zzw3i48mjpbvfgpszws48apqx63wjwsk";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.1.0/stdlib-shims-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0xwbkf7mwwh10s3y2v6badjzcsjz7vzx22rc37dvfd77vgw03vdg";
        package = "packages/topkg/topkg.1.0.1";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "18ysdrd665mhvzqp3s86kymkd1vl6qm7kakzda1h6mr4mnkawi00";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    zarith = 
    {
      opamInputs = 
      {
        conf-gmp = selection.conf-gmp;
        conf-perl = selection.conf-perl;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10y477fjig8d6chpmgdmpv683h78kshkmw3dmhi6sjid4gk6pc52";
        package = "packages/zarith/zarith.1.9.1";
      };
      pname = "zarith";
      src = pkgs.fetchurl 
      {
        sha256 = "0pfa271476dic5pvn6kxz3dfswxs6kqm2cxmhdx5xq2ayca05gj9";
        url = "https://github.com/ocaml/Zarith/archive/release-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
  };
}

